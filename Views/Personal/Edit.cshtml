@model MvcUser.Models.UserPageModel



@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>User</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit"  enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="UserName" class="control-label"></label>
                <input asp-for="UserName" class="form-control" />
                <span asp-validation-for="UserName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PassWord" class="control-label"></label>
                <input asp-for="PassWord" class="form-control" />
                <span asp-validation-for="PassWord" class="text-danger"></span>
            </div>
            <div class="form-group">
                @* asp-for是指定表达式名称生成的id和name *@
                @* 是根据模型来设置html的类型 *@
                @* labei是为表达试生成标签标题和属性 *@
                <label asp-for="Gender" class="control-label"></label>
                @* input是模型来生成对应的文本框 *@
                男<input asp-for="Gender" type="radio" value="男" />
                女<input asp-for="Gender" type="radio" value="女" />
                @* span是在客户端发生验证错误时会显示的错误信息 *@
                @* data-valmsg-for="property属性会在字段中显示错误的信息 *@
                <span asp-validation-for="Gender" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Age" class="control-label"></label>
                <input asp-for="Age" class="form-control" />
                <span asp-validation-for="Age" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Provinces" class="control-label"></label>
                <select asp-for="Provinces" asp-items="Model.ProvinceList" class="form-control"></select>
               
               <span asp-validation-for="Provinces" class="text-danger"></span>
                
            </div>
            <div class="form-group">
                <label asp-for="City" class="control-label"></label>
                <select asp-for="City" class="form-control" asp-items="Model.CityList"></select>
               <span asp-validation-for="City" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Image" class="control-label"></label>

                <input asp-for="Image" type="file" class="form-control" />

                <span asp-validation-for="Image" class="text-danger"></span>
                <br />
                <img id="img" src="@Model.FileUrl" />
                <br />
            </div>

            <div class="form-group">
                <label asp-for="Url" class="control-label"></label>
                <input asp-for="Url" class="form-control" />
                <span asp-validation-for="Url" class="text-danger"></span>

            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
            <input type="hidden" asp-for="City" id="hidCity" />
           
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
} 
<script>
    
    var imgBox = document.getElementById('Image');
    var img = document.getElementById('img');
    var province=document.getElementById('Provinces');
     var city = 'https://localhost:5001/Province/GetCity';
    province.onchange = function () {

                var index = province.selectedIndex;
                var value = province.options[index].value;
                fetch(city + '?parentid=' + value, {
                    method: 'GET',
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                })
                    .then((res) => {
                        return res.json()
                    })
                    .then((data) => {
                        console.log(data);
                        var cities = document.getElementById('City')
                        if (cities.value != "") {
                            cities.innerHTML = "";
                        }
                        if (data != null) {
                            for (var i = 0; i < data.length; i++) {
                                var op = new Option(data[i].name, data[i].id)
                                cities.options.add(op);
                            }

                        }
                    })
            }

    // addEventListener向元素添加事件
    imgBox.addEventListener("change", function () {
        //FileReader可以获取文件中的数据
        var reader = new FileReader();
        //获取文件内容以url形式表示
        reader.readAsDataURL(imgBox.files[0]);
        reader.onload = function () {
            //赋值给img
            img.src = this.result
        }
    })

    
</script>